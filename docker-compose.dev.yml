version: '3.8'

services:
  nginx-proxy:
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile
    restart: always
    image: danydodson/nginx-proxy
    ports:
      - 8081:80
    volumes:
      - './nginx-proxy/data:/etc/nginx'
      - './nginx-proxy/lua:/usr/local/openresty/nginx/lua'
    networks:
      - front-tier
      - back-tier
    depends_on:
      - users-service
    links:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
        tag: nginx.access

  web-client:
    build:
      context: ./web-client
      dockerfile: Dockerfile
    restart: always
    image: danydodson/web-client
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8081
    stdin_open: true
    volumes:
      - './web-client:/usr/src/app'
      - 'pwa-nm:/usr/src/app/node_modules'
    networks:
      - front-tier
    depends_on:
      - users-service

  users-service:
    build:
      context: ./users-service
      dockerfile: Dockerfile
    restart: always
    image: danydodson/users-service
    volumes:
      - './users-service:/usr/src/app'
      - 'users-nm:/usr/src/app/node_modules'
    environment:
      NODE_ENV: development
    networks:
      - back-tier

  fluentd:
    build: ./fluentd
    # links:
    #   - elasticsearch
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - 24224:24224
      - 24224:24224/udp
    networks:
      - back-tier

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - 'discovery.type=single-node'
    expose:
      - 9200
    ports:
      - 9200:9200
    networks:
      - back-tier

  kibana:
    image: kibana:7.2.0
    # links:
    #   - elasticsearch
    ports:
      - 5601:5601
    networks:
      - back-tier

networks:
  front-tier:
  back-tier:

volumes:
  pwa-nm: null
  users-nm: null
